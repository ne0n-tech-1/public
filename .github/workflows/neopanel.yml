name: Setup Pterodactyl Panel & Node

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common ca-certificates lsb-release apt-transport-https curl unzip mariadb-server redis-server nginx composer jq docker.io

          # Add PHP PPA
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get update

          # Install PHP 8.2 + modules
          sudo apt-get install -y \
            php8.2-cli php8.2-mysql php8.2-mbstring php8.2-bcmath \
            php8.2-xml php8.2-fpm php8.2-curl php8.2-zip

      - name: Setup Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${{ secrets.TS_AUTH_KEY }} --hostname="ptero-vps" --ssh
          
          # Assign constant IPs
          sudo ip addr add 100.100.100.10 dev tailscale0 || true
          sudo ip addr add 100.100.100.11 dev tailscale0 || true
          
          echo "PANEL_IP=100.100.100.10" >> $GITHUB_ENV
          echo "NODE_IP=100.100.100.11" >> $GITHUB_ENV

      - name: Restore backup if exists
        id: restore
        uses: actions/cache@v3
        with:
          path: /etc/pterodactyl
          key: ptero-backup

      - name: Install Pterodactyl Panel
        if: steps.restore.outputs.cache-hit != 'true'
        run: |
          cd /var/www
          sudo mkdir -p pterodactyl
          sudo chown -R $USER:$USER pterodactyl
          cd pterodactyl
          curl -Lo panel.tar.gz https://github.com/pterodactyl/panel/releases/latest/download/panel.tar.gz
          tar -xzvf panel.tar.gz
          composer install --no-dev --optimize-autoloader
          
          cp .env.example .env
          php artisan key:generate --force
          php artisan migrate --seed --force
          
          sudo chown -R www-data:www-data /var/www/pterodactyl
          sudo systemctl enable --now php8.2-fpm
          sudo systemctl restart nginx

      - name: Insert Application API Key
        if: steps.restore.outputs.cache-hit != 'true'
        run: |
          API_KEY=$(openssl rand -hex 32)
          echo "API_KEY=$API_KEY" >> $GITHUB_ENV
          
          sudo mysql -e "
            INSERT INTO application_api_keys (identifier, \`key\`, allowed_ips, created_at, updated_at)
            VALUES ('installer', '${API_KEY}', NULL, NOW(), NOW());
          " pterodactyl

      - name: Create Location & Node via API
        if: steps.restore.outputs.cache-hit != 'true'
        run: |
          # Create location
          curl -s -X POST "http://${PANEL_IP}/api/application/locations" \
            -H "Authorization: Bearer ${API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{"short": "local", "long": "Local"}'

          # Create node
          curl -s -X POST "http://${PANEL_IP}/api/application/nodes" \
            -H "Authorization: Bearer ${API_KEY}" \
            -H "Content-Type: application/json" \
            -d "{
              \"name\": \"Node1\",
              \"description\": \"Local Node\",
              \"location_id\": 1,
              \"fqdn\": \"${NODE_IP}\",
              \"scheme\": \"http\",
              \"memory\": 4096,
              \"disk\": 10000,
              \"daemon_base\": \"/var/lib/pterodactyl/volumes\",
              \"daemon_sftp\": 2022,
              \"daemon_listen\": 8080
            }" > node.json

          NODE_ID=$(jq -r '.attributes.id' node.json)
          echo "NODE_ID=$NODE_ID" >> $GITHUB_ENV

      - name: Setup Wings
        if: steps.restore.outputs.cache-hit != 'true'
        run: |
          sudo mkdir -p /etc/pterodactyl
          curl -L -o /usr/local/bin/wings https://github.com/pterodactyl/wings/releases/latest/download/wings_linux_amd64
          sudo chmod +x /usr/local/bin/wings

          curl -s -X GET "http://${PANEL_IP}/api/application/nodes/${NODE_ID}/configuration" \
            -H "Authorization: Bearer ${API_KEY}" \
            -o /etc/pterodactyl/config.yml

          sudo tee /etc/systemd/system/wings.service > /dev/null <<EOL
          [Unit]
          Description=Pterodactyl Wings Daemon
          After=docker.service

          [Service]
          User=root
          WorkingDirectory=/etc/pterodactyl
          ExecStart=/usr/local/bin/wings --config /etc/pterodactyl/config.yml
          Restart=always
          RestartSec=5s
          LimitNOFILE=4096

          [Install]
          WantedBy=multi-user.target
          EOL

          sudo systemctl enable --now wings

      - name: Setup Cloudflare Tunnel
        run: |
          docker run -d cloudflare/cloudflared:latest tunnel --no-autoupdate run --token ${{ secrets.CF_TUNNEL_TOKEN }}

      - name: Schedule Backup
        run: |
          echo "*/350 * * * * root tar -czf /tmp/ptero-backup.tar.gz /etc/pterodactyl /var/www/pterodactyl && gh release create backup-\$(date +\%s) /tmp/ptero-backup.tar.gz -R ${{ github.repository }}" \
            | sudo tee -a /etc/crontab
